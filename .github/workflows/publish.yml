name: publish

on:
  release:
    types:
      - published

jobs:
  build:
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest, macos-latest, windows-2019]

    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install gcc-multilib
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install g++-multilib -y

    - name: Setup node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - id: get_version
      name: Extract semver
      uses: battila7/get-version-action@v2

    - name: Set package version
      run: npm --no-git-tag-version version ${{ steps.get_version.outputs.version-without-v }}

    - name: Install npm dependencies
      run: npm ci --ignore-scripts

    - name: Build artifact (ia32)
      if: matrix.os != 'macos-latest'
      run: npm run build --target_arch=ia32

    - name: Build artifact (x64)
      run: npm run build --target_arch=x64

    - name: Run tests
      run: npm run test

    - name: Upload to release
      if: steps.get_version.outputs.is-semver == 'true'
      uses: csexton/release-asset-action@v2
      with:
        pattern: packages/utimes*.tar.gz
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ github.event.release.upload_url }}

  build-arm:
    strategy:
      matrix:
        arch: [aarch64, armv7]
        distro: [ubuntu18.04]

    name: build ${{ matrix.distro }}:${{ matrix.arch }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: get_version
      name: Extract semver
      uses: battila7/get-version-action@v2

    - name: Set package version
      run: npm --no-git-tag-version version ${{ steps.get_version.outputs.version-without-v }}

    - name: Build artifact (${{ matrix.arch }})
      uses: uraimo/run-on-arch-action@v2.1.1
      with:
        arch: ${{ matrix.arch }}
        distro: ${{ matrix.distro }}
        dockerRunArgs: --volume "${PWD}:/repo"
        install: |
          apt-get update -y
          apt-get install -y curl
          curl -fsSL https://deb.nodesource.com/setup_10.x | bash -
          apt-get install -y make g++ python nodejs
        run: |
          cd /repo
          npm ci --ignore-scripts
          npm run build
          npm run test

    - name: Upload to release
      if: steps.get_version.outputs.is-semver == 'true'
      uses: csexton/release-asset-action@v2
      with:
        pattern: packages/utimes*.tar.gz
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ github.event.release.upload_url }}

  publish:
    needs: [build, build-arm]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: 'https://registry.npmjs.org'

    - id: get_version
      name: Extract semver
      uses: battila7/get-version-action@v2

    - name: Set package version
      run: npm --no-git-tag-version version ${{ steps.get_version.outputs.version-without-v }}

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build source files
      run: npm run tsc

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

